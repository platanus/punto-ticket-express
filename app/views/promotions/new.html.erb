<div class="page-header">
  <h1><%= t(".title") %></h1>
</div>
<div class="row" ng-controller="PromotionNewCtrl" ng-init='init(<%= raw @promotion.to_json %>,<%= raw promo_scopes_for_select(@event).to_json %>, <%= raw promo_types_for_select.to_json %>)'>
  <div class="span3">
    <%= render 'events/sidebar' %>
  </div>
  <div class="span9">
    <div class="well">
      <div class="row">
        <div class="span8">
          <legend>
            <%= t(".promo_title", event_name: @event.name) %>
          </legend>
          <%= form_for(@promotion, :html => {:name => 'promoForm', :class => 'form-horizontal', novalidate: true, enctype: 'multipart/form-data'}) do |f| %>
            <bs:control-group bound-cg required label="<%= Promotion.human_attribute_name :name %>">
              <input type="text" name="promotion[name]" ng-model="promotion.name" class="span4"
                dirty-on-blur required placeholder="<%= pholder(Promotion, :name) %>"/>
            </bs:control-group>

            <input type="text" style="display: none" name="promotion[start_date]" ng-model="dates.startDateTime" />
            <input type="text" style="display: none" name="promotion[end_date]" ng-model="dates.endDateTime" />

            <bs:control-group bound-cg required label="<%= Promotion.human_attribute_name :start_date %>" help="<%= t('.help.start_date') %>">
              <input type="text" class="input-small" validation-group="promotionDates" ng-model="dates.startDate"
                data-date-format="dd/mm/yyyy" dirty-on-blur bs-datepicker model-as="startDateModel" ng-change="buildStartDatetime()"
                validate="required, date-compare: [endDateModel.$modelValue, 'LE'] as eventEndAfterStart" />
              <button type="button" class="btn" data-toggle="datepicker"><i class="icon-calendar"></i></button>

              <pte-time-picker validation-group="promotionDates" ng-disabled="{{disabled}}"
                validate="time-compare: [endTimeModel.$viewValue, startDateModel.$modelValue, endDateModel.$modelValue, 'L'] as eventEndTimeAfterStart"
                ng-model="dates.startTime" model-as="startTimeModel" ng-change="buildStartDatetime()" dirty-on-blur/>
            </bs:control-group>

            <bs:control-group bound-cg required label="<%= Promotion.human_attribute_name :end_date %>" help="<%= t('.help.start_date') %>">
              <input type="text" class="input-small" validation-group="promotionDates" ng-model="dates.endDate" ng-change="buildEndDatetime()"
                data-date-format="dd/mm/yyyy" dirty-on-blur bs-datepicker model-as="endDateModel" ng-disabled="{{disabled}}"
                validate="required, date-compare: [startDateModel.$modelValue, 'GE'] as eventEndAfterStart" />
              <button type="button" class="btn" data-toggle="datepicker"><i class="icon-calendar"></i></button>

              <pte-time-picker validation-group="promotionDates" ng-disabled="{{disabled}}" ng-change="buildEndDatetime()"
                validate="time-compare: [startTimeModel.$viewValue, startDateModel.$modelValue, endDateModel.$modelValue, 'G'] as   eventEndTimeAfterStart"
                ng-model="dates.endTime" model-as="endTimeModel" dirty-on-blur />
            </bs:control-group>

            <bs:control-group bound-cg label="<%= Promotion.human_attribute_name :limit %>" help="<%= t('.help.limit') %>">
              <input type="number" name="promotion[limit]" ng-model="promotion.limit" class="span2"
                dirty-on-blur placeholder="<%= pholder(Promotion, :limit) %>"/>
            </bs:control-group>

            <bs:control-group bound-cg label="<%= Promotion.human_attribute_name :activation_code %>">
              <input type="text" name="promotion[activation_code]" ng-model="promotion.activation_code" class="span4" dirty-on-blur placeholder="<%= pholder(Promotion, :activation_code) %>"/>
            </bs:control-group>

            <bs:control-group bound-cg class="xls-container" help="<%= t('.xls_file_help', xls_example_link: promo_template_link) %>">
              <input type="file" name="promotion[codes_file]" />
            </bs:control-group>

            <bs:control-group bound-cg label="<%= Promotion.human_attribute_name :promotable_id %>"
              help="<%= t('.help.scope') %>">
              <select name="promotion[promotable_id]" ng-model="promotion.promotable"
                ng-options="p.name for p in promotables track by p.id"
                ng-change="calculateAllTicketPrices()"
                class="span3" dirty-on-blur>
                <option value=""></option>
              </select>
            </bs:control-group>

            <bs:control-group bound-cg required label="<%= Promotion.human_attribute_name :promotion_type %>">
              <select name="promotion[promotion_type]" ng-model="promotion.promotionType"
                ng-options="p.name for p in promotionTypes track by p.id"
                ng-change="calculateAllTicketPrices()"
                validation-group="promotionTypeGroup"
                model-as="promotionTypeModel" required
                class="span3" dirty-on-blur>
              </select>
            </bs:control-group>

            <bs:control-group bound-cg required label="<%= Promotion.human_attribute_name :promotion_type_config %>"  help="<%= t('.help.promotion_type_config') %>">
              <input type="number" name="promotion[promotion_type_config]"
                ng-model="promotion.promotionTypeConfig"
                validation-group="promotionTypeGroup"
                placeholder="<%= pholder(Promotion, :promotion_type_config) %>"
                validate="promo-config: [promotionTypeModel.$modelValue] as invalidPromoConfig"
                class="span2" dirty-on-blur required />
            </bs:control-group>

            <div class="form-actions">
              <input type="submit" value="<%= t('buttons.save') %>"
                class="btn btn-success btn-primary btn-large"
                ng-disabled="promoForm.$pristine || promoForm.$invalid" />
              <%= link_to t('buttons.back'), promotions_path(id: @event.id), :method => :get, :class => 'btn btn-large' %>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</div>
